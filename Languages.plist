<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>scpt</string>
		<key>ID</key>
		<integer>1</integer>
		<key>Name</key>
		<string>AppleScript</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>echo -e "tell application \"AppleScript Runner\"\ndo script \"$PWD/$filename\"\nend" | osascript; exit;</string>
		<key>SyntaxMode</key>
		<string>AppleScript</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#include &lt;stdio.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu1x -Wall -Wno-missing-braces -Wno-unused-function -framework Accelerate -framework OpenGL -framework GLUT -fms-extensions -Wno-microsoft -framework CoreFoundation </string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>2</integer>
		<key>Name</key>
		<string>C</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#include &lt;iostream&gt;

using namespace std;
int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-ObjC++</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>cpp</string>
		<key>ID</key>
		<integer>3</integer>
		<key>Name</key>
		<string>C++</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>C++</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>class Untitled {
	public static void main(String[] args) {
		%@
	}
}</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>java</string>
		<key>ID</key>
		<integer>4</integer>
		<key>Name</key>
		<string>Java</string>
		<key>OutputEncoding</key>
		<integer>30</integer>
		<key>RunCommand</key>
		<string>java $compiler</string>
		<key>SyntaxMode</key>
		<string>Java</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>js</string>
		<key>ID</key>
		<integer>11</integer>
		<key>Name</key>
		<string>JavaScript (Node.js)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>node $filename</string>
		<key>SyntaxMode</key>
		<string>JavaScript</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;
#import &lt;objc/runtime.h&gt;
#import &lt;objc/message.h&gt;

int main(int argc, char *argv[]) {
	@autoreleasepool {
		%@
	}
}</string>
		<key>CompilerFlags</key>
		<string>-std=c99 -framework Cocoa -F/Library/Frameworks -framework UIKit -all_load -lobjc -fno-objc-arc -O0 -g -I/usr/local/llvm/include -framework Carbon -framework CoreGraphics -framework Accelerate -all_load -lreadline -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk -Wall -Wextra -Wno-unused-parameter</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>5</integer>
		<key>Name</key>
		<string>Objective-C</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>pl</string>
		<key>ID</key>
		<integer>6</integer>
		<key>Name</key>
		<string>Perl</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>perl $filename</string>
		<key>SyntaxMode</key>
		<string>Perl</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>py</string>
		<key>ID</key>
		<integer>8</integer>
		<key>Name</key>
		<string>Python</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>/usr/local/bin/python $filename</string>
		<key>SyntaxMode</key>
		<string>Python</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>rb</string>
		<key>ID</key>
		<integer>9</integer>
		<key>Name</key>
		<string>Ruby</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>~/.rbenv/shims/ruby $filename</string>
		<key>SyntaxMode</key>
		<string>Ruby</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#!/bin/bash

%@</string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>sh</string>
		<key>ID</key>
		<integer>10</integer>
		<key>Name</key>
		<string>Shell Script</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>bash $filename</string>
		<key>SyntaxMode</key>
		<string>Shell Script</string>
	</dict>
	<dict>
		<key>FileExtension</key>
		<string>hs</string>
		<key>ID</key>
		<integer>299412763</integer>
		<key>Name</key>
		<string>Haskell</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>runhaskell $filename</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>FileExtension</key>
		<string>lua</string>
		<key>ID</key>
		<integer>1809711531</integer>
		<key>Name</key>
		<string>Lua</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>luajit $filename</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=c99 -fobjc-exceptions -lobjc -fno-constant-cfstrings -fconstant-string-class=FConstantString -framework CoreFoundation</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>186144483</integer>
		<key>Name</key>
		<string>Objective-C (Raw)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>section .data
hello_world     db      "Hello World!", 0x0a
 
section .text
global start
 
start:
mov rax, 0x2000004      ; System call write = 4
mov rdi, 1              ; Write to standard out = 1
mov rsi, hello_world    ; The address of hello_world string
mov rdx, 14             ; The size to write
syscall                 ; Invoke the kernel
mov rax, 0x2000001      ; System call number for exit = 1
mov rdi, 0              ; Exit success = 0
syscall                 ; Invoke the kernel
</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>s</string>
		<key>ID</key>
		<integer>3651155034</integer>
		<key>Name</key>
		<string>ASM (x64)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./"$compiler"</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>package main

import "fmt"

func main() {
	fmt.Println("Hello, %@")
}</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>go</string>
		<key>ID</key>
		<integer>299019792</integer>
		<key>Name</key>
		<string>Go</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -Wall -Wno-missing-braces -Wno-unused-function -Os</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>3365701747</integer>
		<key>Name</key>
		<string>C -&gt; ASM (x64)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -Wall -Wno-missing-braces -Wno-unused-function -Os</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>3736738752</integer>
		<key>Name</key>
		<string>C -&gt; ASM (x86)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>@hello = internal constant [13 x i8] c"hello, world\00"

declare i32 @puts(i8*)

define i32 @main() {
start:
  %0 = call i32 @puts(i8* getelementptr inbounds ([13 x i8]* @hello, i32 0, i32 0))
  ret i32 0
}</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>ll</string>
		<key>ID</key>
		<integer>2331045535</integer>
		<key>Name</key>
		<string>LLVM</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>DYLD_INSERT_LIBRARIES=/usr/lib/libobjc.dylib:/System/Library/Frameworks/Foundation.framework/Foundation lli $compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>FileExtension</key>
		<string>st</string>
		<key>ID</key>
		<integer>3903776067</integer>
		<key>Name</key>
		<string>Smalltalk</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>gst $filename</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -O2</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>3820115803</integer>
		<key>Name</key>
		<string>Objective-C -&gt; LLVM</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;
#import &lt;objc/runtime.h&gt;
#import &lt;objc/message.h&gt;

int main(int argc, char *argv[]) {
	NSAutoreleasePool *p = [[NSAutoreleasePool alloc] init];
	%@
	[p release];
}</string>
		<key>CompilerFlags</key>
		<string>-O0 -g -lffi -std=gnu99</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>2204332797</integer>
		<key>Name</key>
		<string>Objective-C (32 Bit)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;
#import &lt;objc/runtime.h&gt;
#import &lt;objc/message.h&gt;

int main(int argc, char *argv[]) {
	@autoreleasepool {
		%@
	}
}</string>
		<key>CompilerFlags</key>
		<string>-all_load -lobjc -O0 -g -lffi</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>2827949958</integer>
		<key>Name</key>
		<string>Objective-C (ARC)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -O0 -fobjc-arc</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>2578856836</integer>
		<key>Name</key>
		<string>Objective-C -&gt; LLVM (ARC)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>using System;

class Program
{
	static void Main(string[] args)
	{
		%@
	}
}</string>
		<key>CompilerFlags</key>
		<string></string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>cs</string>
		<key>ID</key>
		<integer>13</integer>
		<key>Name</key>
		<string>C#</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>mono $compiler</string>
		<key>SyntaxMode</key>
		<string>C#</string>
	</dict>
	<dict>
		<key>FileExtension</key>
		<string>php</string>
		<key>ID</key>
		<integer>767051930</integer>
		<key>Name</key>
		<string>PHP</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>/usr/bin/php $filename</string>
		<key>SyntaxMode</key>
		<string>PHP</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerFlags</key>
		<string>-framework Carbon -framework AppKit -framework QuartzCore</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>tq</string>
		<key>ID</key>
		<integer>541889821</integer>
		<key>Name</key>
		<string>Tranquil</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -Wall -Wno-missing-braces -Wno-unused-function</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>2968396368</integer>
		<key>Name</key>
		<string>C -&gt; ASM (ARM)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>rb</string>
		<key>ID</key>
		<integer>1568074265</integer>
		<key>Name</key>
		<string>Macruby</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>macruby $filename</string>
		<key>SyntaxMode</key>
		<string>Ruby</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>section .data
hello_world     db      "Hello World!", 0x0a
 
section .text
global start
 
start:
mov rax, 0x2000004      ; System call write = 4
mov rdi, 1              ; Write to standard out = 1
mov rsi, hello_world    ; The address of hello_world string
mov rdx, 14             ; The size to write
syscall                 ; Invoke the kernel
mov rax, 0x2000001      ; System call number for exit = 1
mov rdi, 0              ; Exit success = 0
syscall                 ; Invoke the kernel
</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>s</string>
		<key>ID</key>
		<integer>3563468906</integer>
		<key>Name</key>
		<string>ASM (x86)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./"$compiler"</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -O0 -I/usr/local/llvm/include -fobjc-arc</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>4253185283</integer>
		<key>Name</key>
		<string>Objective-C -&gt; LLVM(iOS Sim)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>section .data
hello_world     db      "Hello World!", 0x0a
 
section .text
global start
 
start:
mov rax, 0x2000004      ; System call write = 4
mov rdi, 1              ; Write to standard out = 1
mov rsi, hello_world    ; The address of hello_world string
mov rdx, 14             ; The size to write
syscall                 ; Invoke the kernel
mov rax, 0x2000001      ; System call number for exit = 1
mov rdi, 0              ; Exit success = 0
syscall                 ; Invoke the kernel
</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>s</string>
		<key>ID</key>
		<integer>3556765111</integer>
		<key>Name</key>
		<string>ASM (ARM)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./"$compiler"</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -O2 -I/usr/local/llvm/include -fobjc-arc -mios-version-min=5.0</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>m</string>
		<key>ID</key>
		<integer>2428320837</integer>
		<key>Name</key>
		<string>Objective-C -&gt; LLVM(iPhone)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler </string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>int main(int argc, char *argv[]) {
	%@
}</string>
		<key>CompilerFlags</key>
		<string>-std=gnu1x -Wall -Wno-missing-braces -Wno-unused-function -fms-extensions -Wno-microsoft</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>2317660513</integer>
		<key>Name</key>
		<string>C Preprocessor</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler</string>
		<key>SyntaxMode</key>
		<string>C</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string></string>
		<key>CompilerScript</key>
		<false/>
		<key>FileExtension</key>
		<string>rb</string>
		<key>ID</key>
		<integer>2822011716</integer>
		<key>Name</key>
		<string>Ruby 2.0</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>~/.rbenv/versions/2.0.0-p353/bin/ruby $filename</string>
		<key>SyntaxMode</key>
		<string>Ruby</string>
	</dict>
	<dict>
		<key>FileExtension</key>
		<string>lua</string>
		<key>ID</key>
		<integer>300926293</integer>
		<key>Name</key>
		<string>Moonscript</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>moon $filename</string>
		<key>SyntaxMode</key>
		<string>Generic</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>fn main() {
    println!("Hello World!");
}</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>rs</string>
		<key>ID</key>
		<integer>1717720290</integer>
		<key>Name</key>
		<string>Rust</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>./$compiler</string>
		<key>SyntaxMode</key>
		<string>None</string>
	</dict>
	<dict>
		<key>CodeTemplate</key>
		<string>#import &lt;Foundation/Foundation.h&gt;

int main(int argc, char *argv[]) {
	%@
}
</string>
		<key>CompilerFlags</key>
		<string>-std=gnu99 -ObjC -Wall -Wno-missing-braces -Wno-unused-function -Os</string>
		<key>CompilerScript</key>
		<true/>
		<key>FileExtension</key>
		<string>c</string>
		<key>ID</key>
		<integer>2014289644</integer>
		<key>Name</key>
		<string>Objective-C -&gt; ASM (x64)</string>
		<key>OutputEncoding</key>
		<integer>4</integer>
		<key>RunCommand</key>
		<string>cat $compiler</string>
		<key>SyntaxMode</key>
		<string>Objective-C</string>
	</dict>
</array>
</plist>
